1. List the commands for adding, updating, and deleting data.
  INSERT INTO books (id, title, author)
  VALUES (5829, 'Some Book about Programming', 'John Smith');

  UPDATE books SET author='John Smith' WHERE id=1259;

  DELETE FROM books WHERE id=5829;

2. Explain the structure for each type of command.
  We start with the command word, providing next the name of the table. After that we want to either define the changes if altering, and define where the changes will
  occur.

3. What are some of the data types that can be used in tables? Give a real-world example of each type.
  There are a large amount of data types that can be used in tables, but a few examples are: money ($5.99), text ('hello'), integer (7), and timestamp ("13:10:11").

4. Decide how to create a new table to hold a list of people invited to a wedding dinner. The table needs to have first and last names, whether they sent in their RSVP, the
number of guests they are bringing, and the number of meals (1 for adults and 1/2 for children).

  -Which data type would you use to store each of the following pieces of information?
    -First and last name.
      text
    -Whether they sent in their RSVP.
      boolean
    -Number of guests.
      integer
    -Number of meals.
      float

  -Write a command that creates the table to track the wedding dinner.
    CREATE TABLE guests (
      name text,
      RSVP boolean,
      numOfGuests integer,
      numOfMeals float
    );

  -Write a command that adds a column to track whether the guest sent a thank you card.
    ALTER TABLE guests ADD COLUMN thankYouCard text SET DEFAULT 'None';

  -You have decided to move the data about the meals to another table, so write a command to remove the column storing the number meals from the wedding table.
    ALTER TABLE guests DROP COLUMN numOfMeals;

  -The guests will need a place to sit at the reception, so write a command that adds a column for table number.
    ALTER TABLE guests ADD COLUMN tableNumber text SET DEFAULT 'None';

  -The wedding is over and we do not need to keep this information, so write a command that deletes the table numbers from the database.
    ALTER TABLE guests DROP COLUMN tableNumber;

5. Write a command to create a new table to hold the books in a library with the columns ISBN, title, author, genre, publishing date, number of copies, and available copies.
  CREATE TABLE books (
    ISBN integer,
    title text,
    author text,
    publishingDate date,
    numOfCopies integer,
    availableCopies integer
  )

  -Find three books and add their information to the table.
    INSERT INTO books (ISBN, title, author, publishingDate, numOfCopies, availableCopies)
    VALUES (0316168815, 'The Lovely Bones', 'Alice Sebold', 3, 3);
    INSERT INTO books (ISBN, title, author, publishingDate, numOfCopies, availableCopies)
    VALUES (0811200684, 'Siddhartha', 'Hermann Hesse', 2, 1);
    INSERT INTO books (ISBN, title, author, publishingDate, numOfCopies, availableCopies)
    VALUES (9998459192, 'Handmaids Tale', 'Margaret Atwood', 2, 0);

  -Someone has just checked out one of the books. Change the number of available copies to 1 fewer.
    UPDATE books SET availableCopies=0 WHERE title='Siddhartha';

  -Now one of the books has been added to the banned books list. Remove it from the table.
    DELETE FROM books WHERE ISBN=9998459192;

6. Write a command to make a new table to hold spacecrafts. Information should include id, name, year launched, country of origin, a brief description of the mission,
orbiting body, if it is currently operating, and its approximate miles from Earth. In addition to the table creation, provide commands that perform the following operations:
  CREATE table spacecrafts (
    id integer,
    name text,
    yearLaunched integer,
    countryOfOrigin text,
    description text,
    orbitingBody text,
    currentlyOperating boolean,
    milesFromEarth float
  )

  -Add three non-Earth-orbiting satellites to the table.
    INSERT INTO spacecrafts (id, name, yearLaunched, countryOfOrigin, description, orbitingBody, currentlyOperating, milesFromEarth)
    VALUES (937493, 'Luna 10', 1966, 'Soviet Union', 'Luna 10 was a lunar orbiter.', 'moon', false, 238900.0);
    INSERT INTO spacecrafts (id, name, yearLaunched, countryOfOrigin, description, orbitingBody, currentlyOperating, milesFromEarth)
    VALUES (467338, 'Parker Solar Probe', 2018, 'United States', 'The Parker Solar Probe is a robotic spacecraft en route to probe the outer corona of the Sun.', 'sun',
    true, 92960000.0);
    INSERT INTO spacecrafts (id, name, yearLaunched, countryOfOrigin, description, orbitingBody, currentlyOperating, milesFromEarth)
    VALUES (223094, 'Lunar Reconnaissance Orbiter', 2009, 'United States', 'The Lunar Reconnaissance Orbiter is a robotic spacecraft currently orbiting the Moon in an
    eccentric polar mapping orbit.', 'moon', true, 238900.0);

  -Remove one of the satellites from the table since it has just crashed into the planet.
    DELETE from spacecrafts WHERE id=223094;

  -Edit another satellite because it is no longer operating and change the value to reflect that.
    UPDATE spacecrafts SET currentlyOperating=false WHERE id=467338;

7. Write a command to create a new table to hold the emails in your inbox. This table should include an id, the subject line, the sender, any additional recipients, the
body of the email, the timestamp, whether or not you have read the email, and the id of the email chain it's in. Also provide commands that perform the following operations:
  CREATE TABLE emails (
    id integer,
    subjectLine text,
    sender text,
    additionalRecipients text,
    body text,
    timestamp datetime,
    readReceipt boolean,
    idEmailChain integer
  );

  -Add three new emails to the inbox.
    INSERT INTO emails (id, subjectLine, sender, additionalRecipients, body, timestamp, readReceipt, idEmailChain)
    VALUES (123, 'Hi', 'John Smith', 'Rebecca Smith, Anita Smith', 'Hi, how are you?', 2019-01-07 13:12:11, true, 321)
    INSERT INTO emails (id, subjectLine, sender, additionalRecipients, body, timestamp, readReceipt, idEmailChain)
    VALUES (234, 'Hello', 'Rebecca Smith', 'Anita Smith, John Smith', 'I'm good, how's everyone?', 2019-01-07 14:15:16, true, 321)
    INSERT INTO emails (id, subjectLine, sender, additionalRecipients, body, timestamp, readReceipt, idEmailChain)
    VALUES (345, 'Hi there', 'Anita Smith', 'John Smith, Rebecca Smith', 'I'm excellent, thanks!', 2019-01-08 10:01:11, false, 321)

  -You deleted one of the emails, so write a command to remove the row from the inbox table.
    DELETE FROM emails WHERE id=123;

  -You started reading an email but just heard a crash in another room. Mark the email as unread before investigating the crash, so you can come back and read it later.
    UPDATE emails SET readReceipt=false WHERE id=234;

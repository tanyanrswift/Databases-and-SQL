1. Write out a generic SELECT statement.
  SELECT description
  FROM dogs
  WHERE breed='German Shepherd';

2. Create a fun way to remember the order of operations in a SELECT statement, such as a mnemonic.
    Order of Operations: SFW (Safe for Work)

3. Given this dogs table, write queries to select the following pieces of data:
Intake teams typically guess the breed of shelter dogs, so the breed column may have multiple words (for example, "Labrador Collie mix").

  -Display the name, gender, and age of all dogs that are part Labrador.
    SELECT name, gender, age
    FROM dogs
    WHERE breed LIKE '%labrador%';

  -Display the ids of all dogs that are under 1 year old.
    SELECT id
    FROM dogs
    WHERE age < 1;

  -Display the name and age of all dogs that are female and over 35lbs.
    SELECT name, age
    FROM dogs
    WHERE gender=female
    AND weight > 35;

  -Display all of the information about all dogs that are not Shepherd mixes.
    SELECT *
    FROM dogs
    WHERE breed NOT LIKE '%shepherd%';

  -Display the id, age, weight, and breed of all dogs that are either over 60lbs or Great Danes.
    SELECT id, age, weight, breed
    FROM dogs
    WHERE weight > 60 lbs
    OR breed='great dane';

4. Given this cats table, what records are returned from these queries?

  -SELECT name, adoption_date FROM cats;
    'Mushi', '2016-03-22',
    'Seashell', NULL,
    'Azul', '2016-09-01',
    'Victoire', '2016-09-01',
    'Nala', NULL;

  -SELECT name, age FROM cats;
    'Mushi', 1,
    'Seashell', 7,
    'Azul', 3,
    'Victoire', 7,
    'Nala', 1;

5. From the cats table, write queries to select the following pieces of data.

  -Display all the information about all of the available cats.
    SELECT *
    FROM cats

  -Display the name and sex of all cats who are 7 years old.
    SELECT name, sex
    FROM cats
    WHERE age =7;

  -Find all of the names of the cats, so you don’t choose duplicate names for new cats.
    SELECT name
    FROM cats

6. List each comparison operator and explain when you would use it. Include a real world example for each.
  If you can’t list these from memory, do these flashcards until you can!
    > greater than-when we want to determine if one value is greater than another (ex. 7 > 6 is true)
    < less than-when we want to determine if one value is less than another (ex. 7 < 6 is false)
    >= greater than or equal to-when we want to determine if one value is greater than or equal to another (ex. 7.2 >= 7.1 is true)
    <= less than or equal to-when we want to determine if one value is less than or equal to another (ex. 7.2 <= 7.2 is true)
    != not equal to-when we want to indicate that two values are not equal to one another (ex. 7.2 != 7.1 is true)
    = equal to-when we want to indicate that two values are equal to one another (ex. 7.2 = 7.2 is true)

7. From the cats table, what data is returned from these queries?
INSERT INTO cats
    ("id", "name",   "gender", "age", "intake_date", "adoption_date")
VALUES
    ( 1, 'Mushi',    'M',       1,    '2016-01-09',  '2016-03-22'),
    ( 2, 'Seashell', 'F',       7,    '2016-01-09',   NULL),
    ( 3, 'Azul',     'M',       3,    '2016-01-11',  '2016-04-17'),
    ( 4, 'Victoire', 'M',       7,    '2016-01-11',  '2016-09-01'),
    ( 5, 'Nala',     'F',       1,    '2016-01-12',   NULL);


  -SELECT name FROM cats WHERE gender = ‘F’;
    'Seashell',
    'Nala';

  -SELECT name FROM cats WHERE age <> 3;
    'Mushi',
    'Seashell',
    'Victoire',
    'Nala';

  -SELECT ID FROM cats WHERE name != ‘Mushi’ AND gender = ‘M’;
    3, 4;

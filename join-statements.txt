1. How do you find related data held in two separate data tables?
  You are able to find related data held in two separate data tables by using what is called a JOIN statement.

2. Explain, in your own words, the difference between an INNER JOIN, LEFT OUTER JOIN, and RIGHT OUTER JOIN. Give a real-world example for each.
  An INNER JOIN is the default JOIN used when finding related data in two separate data tables.


3. Define primary key and foreign key. Give a real-world example for each.
  A primary key is basically an identifier for the rows in a database table.  A foreign key is an identifier that is available on another table and can be
  used to link the two tables. For example, if you have two tables, one with employees at a company, and a second table with salaries, you could have a
  primary key of an employee ID number on the first table, and then have it be a foreign key on the second salary table.

4. Define aliasing.
  Aliasing is a way of writing shorthand names for table names in order to simplify what we are writing.

5. Change this query so that you are using aliasing:
  SELECT professor.name, compensation.salary,
  compensation.vacation_days FROM professor JOIN
  compensation ON professor.id =
  compensation.professor_id;

6. Why would you use a NATURAL JOIN? Give a real-world example.
  You would use a NATURAL JOIN if you want to see 

7. Using this Employee schema and data, write queries to find the following information:
  -List all employees and all shifts.

8. Using this Adoption schema and data, please write queries to retrieve the following information and include the results:
  -Create a list of all volunteers. If the volunteer is fostering a dog, include each dog as well.

  -The cat's name, adopter's name, and adopted date for each cat adopted within the past month to be displayed as part of the "Happy Tail" social media
  promotion which posts recent successful adoptions.

  -Create a list of adopters who have not yet chosen a dog to adopt.

  -Lists of all cats and all dogs who have not been adopted.

  -The name of the person who adopted Rosco.

9. Using this Library schema and data, write queries applying the following scenarios and include the results:
  -To determine if the library should buy more copies of a given book, please provide the names and position, in order, of all of the patrons with a hold
  (request for a book with all copies checked out) on "Advanced Potion-Making".

  -List all of the library patrons. If they have one or more books checked out, list the books with the patrons.
